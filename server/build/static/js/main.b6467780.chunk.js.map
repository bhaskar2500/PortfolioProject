{"version":3,"sources":["apis/ResumeService.js","components/Artwork/ArtworkImages sync nonrecursive /.(png|jpe?g|svg|jpg)$","components/Artwork/ArtworkImages/Bee.jpg","components/Artwork/ArtworkImages/Books.jpg","components/Artwork/ArtworkImages/WaterDrop.jpg","components/Artwork/ArtworkImages/flower1.jpg","components/Artwork/ArtworkImages/flower2.jpg","components/Artwork/ArtworkImages/flower3.jpg","components/Header/Header.js","components/Footer/Footer.js","components/NavigationBar/NavigationBar.js","components/Home/Home.js","components/Projects/Projects.js","components/Artwork/Artwork.js","apis/ArtworkService.js","components/Documentation/Documentation.js","components/Resume/Resume.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["base_url","process","module","exports","getResumeData","fetch","getNavBarDetails","getSummarizedData","data","requestOptions","method","body","JSON","stringify","headers","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","className","React","Component","Footer","style","display","padding","height","width","backgroundColor","borderTop","textAlign","position","left","bottom","color","NavigationBar","props","state","activeItem","items","label","value","icon","url","objLinkDetails","this","setState","model","onTabChange","OnMenuTabChange","Projects","isSummarized","summarizedText","textToSummarize","visible","then","res","json","catch","ex","header","onTextChange","textValue","text","onClick","OnSummarizeClick","modal","onHide","Artwork","images","activeIndex","showThumbnails","isAutoPlayActive","isPreviewFullScreen","itemTemplate","bind","previewTemplate","onThumbnailChange","onItemChange","onFullScreenChange","r","importAll","require","console","log","forEach","filePath","push","bindDocumentListeners","prevProps","prevState","galleria","unbindDocumentListeners","event","index","closePreviewFullScreen","openPreviewFullScreen","elem","ReactDOM","findDOMNode","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","document","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","addEventListener","removeEventListener","item","src","thumbnailImageSrc","alt","previewImageSrc","autoPlayClassName","classNames","fullScreenClassName","stopSlideShow","startSlideShow","length","title","toggleFullScreen","footer","renderFooter","galleriaClassName","ref","el","showPreviewNavButtons","showNavButtonsOnPreviewHover","numVisible","circular","autoPlay","transitionInterval","previewItemTemplate","thumbnailItemTemplate","maxWidth","Documentation","Resume","resumeHtmlValue","readonly","Routes","exact","path","component","App","history","createBrowserHistory","Boolean","window","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b6467780.chunk.js","sourcesContent":["\r\nvar base_url =process.env.REACT_APP_API_BASE_URL+'resume/' ;\r\nmodule.exports.getResumeData = function () {\r\n    return fetch(`${base_url}getResumeData`);\r\n}\r\nmodule.exports.getNavBarDetails = function () {\r\n    return fetch(`${base_url}getNavBarDetails`);\r\n}\r\n\r\nmodule.exports.getSummarizedData = function (data) {\r\n    if (data != \"\") {\r\n        const requestOptions = {\r\n            method: 'post',\r\n            body: JSON.stringify({\"data\":data}),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        };\r\n        return fetch(`${base_url}getSummarizedData`, requestOptions);\r\n    }\r\n}\r\n\r\n\r\n","var map = {\n\t\"./Bee.jpg\": 75,\n\t\"./Books.jpg\": 76,\n\t\"./WaterDrop.jpg\": 77,\n\t\"./flower1.jpg\": 78,\n\t\"./flower2.jpg\": 79,\n\t\"./flower3.jpg\": 80\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;","module.exports = __webpack_public_path__ + \"static/media/Bee.4a9605bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Books.7a532886.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WaterDrop.eb38d7ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flower1.9e49d4bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flower2.356be4b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flower3.40d67e8d.jpg\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <header className=\"AppHeader\">\r\n            <div>\r\n                Welcome To Bhaskar's Portfolio\r\n            </div>\r\n        </header>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport { Header }\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nclass Footer extends React.Component {\r\n\r\n    render() {\r\n\r\n\r\n        var style = {\r\n            backgroundColor:\"rgb(65, 65, 65)\",\r\n            borderTop: \"1px solid #E7E7E7\",\r\n            textAlign: \"center\",\r\n            padding: \"20px\",\r\n            position: \"fixed\",\r\n            left: \"0\",\r\n            bottom: \"0\",\r\n            height: \"60px\",\r\n            width: \"100%\",\r\n            color:\"white\"\r\n        }\r\n\r\n        var phantom = {\r\n            display: 'block',\r\n            padding: '20px',\r\n            height: '60px',\r\n            width: '100%',\r\n        }\r\n        return <div>\r\n            <div style={phantom} />\r\n            <div style={style}>\r\n\r\n                Copyright @Bhaskar Kaushal\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport { Footer }\r\n","import { TabMenu } from 'primereact/tabmenu';\r\n\r\nimport React, { useReducer } from 'react';\r\n\r\n\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport '../NavigationBar/NavigationBar.css';\r\n\r\nclass NavigationBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem:'',\r\n            items: [\r\n                // { label: 'Home', value: 'Home', icon: 'pi pi-fw pi-home', url:'/#/Home'},\r\n                { label: 'Art Work', value: \"Artwork\", icon: 'pi pi-fw pi-calendar',url:'/#/Artwork' },\r\n                { label: 'Resume', value: 'Resume', icon: 'pi pi-fw pi-pencil',url:'/#/Resume' },\r\n                { label: 'Documentation', icon: 'pi pi-fw pi-file' ,value:\"Documentation\",url:\"/#/Documentation\"},\r\n                { label: 'Projects', value: 'Projects', icon: 'pi pi-fw pi-cog',url:'/#/Projects' }\r\n            ]\r\n        }\r\n    }\r\n\r\n    OnMenuTabChange(objLinkDetails) {\r\n        this.setState({activeItem:objLinkDetails.label})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"NaviagtionContainer\">\r\n                <div className=\"content-section introduction\">\r\n                    <div className=\"feature-intro\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"content-section implementation\">\r\n                    <TabMenu activeItem={this.state.activeItem} model={this.state.items} onTabChange={(e)=>this.OnMenuTabChange(e.value)} />\r\n                </div>\r\n                {/* what's up */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { NavigationBar }","\r\nimport React from \"react\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>Home </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Home","import React from 'react';\r\nimport { Panel } from 'primereact/panel';\r\nimport { Editor } from 'primereact/editor';\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport { getSummarizedData } from '../../apis/ResumeService';\r\n\r\nclass Projects extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isSummarized: true,\r\n            summarizedText: \"\",\r\n            textToSummarize: \"\",\r\n            activeItem: \"\",\r\n            visible: false,\r\n        }\r\n    }\r\n\r\n    OnSummarizeClick(data) {\r\n        this.setState({ isSummarized: false });\r\n        getSummarizedData(data).then((res) => {\r\n            res.json().then(json => {\r\n                this.setState({\r\n                    summarizedText: json.summarizedText\r\n                    , visible: true\r\n                    , isSummarized: true\r\n                })\r\n            })\r\n        }).catch((ex) => {\r\n            this.setState({\r\n                summarizedText: \"OOPS ! Something went wrong .Please try again!!\"\r\n                , visible: false\r\n                , isSummarized: false\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Panel header=\"Project 1 - Basic Summarization of text\">\r\n                        <div>\r\n                            {this.state.isSummarized ? null : <ProgressSpinner />}\r\n\r\n                        </div>\r\n                        <Editor style={{ height: '320px' }} onTextChange={(e) => this.setState({textToSummarize : e.textValue})} value={this.state.text} >\r\n                        </Editor>\r\n                    </Panel>\r\n                </div>\r\n                <div>\r\n                    <Button label=\"Summarize Text\" className=\"btnSummary\" onClick={(e) => this.OnSummarizeClick(this.state.textToSummarize)} ></Button>\r\n\r\n                </div>\r\n                <div>\r\n                    < Dialog header=\"Summarized Text\" visible={this.state.visible} style={{ width: '50vw' }} modal={true} onHide={() => this.setState({ visible: false })} >\r\n                        {this.state.summarizedText}\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Projects ","\r\nimport React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport '../Artwork/Artwork.scss';\r\nimport { Button } from 'primereact/button';\r\nimport { Galleria } from 'primereact/galleria';\r\nimport ArtworkService from '../../apis/ArtworkService'\r\n\r\nclass Artwork extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0,\r\n            showThumbnails: false,\r\n            isAutoPlayActive: true,\r\n            isPreviewFullScreen: false\r\n        };\r\n\r\n        // this.galleriaService = new GalleriaService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.previewTemplate = this.previewTemplate.bind(this);\r\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\r\n    }\r\n    importAll(r) {\r\n        return r.keys().map(r);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // ArtworkService.getBase64Images().then(data => {\r\n        // console.log('MOUNTED')\r\n        // data.json(data).then((json) => {\r\n        //     console.log(json, '--------')\r\n\r\n        //     this.setState({ images: json.images })\r\n        // })\r\n        // });\r\n        const images = this.importAll(require.context('./ArtworkImages', false, /\\.(png|jpe?g|svg|jpg)$/));\r\n        console.log(images);\r\n        var data = []\r\n        images.forEach((filePath) => {\r\n            data.push(\r\n                {\r\n                    \"previewImageSrc\": filePath,\r\n                    \"thumbnailImageSrc\": filePath,\r\n                    \"alt\": \"Description for Image 1\",\r\n                    \"title\": \"Title 1\"\r\n                }\r\n            )\r\n        })\r\n        this.setState({ images: data })\r\n        this.bindDocumentListeners();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\r\n            this.setState({\r\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n    }\r\n\r\n    onThumbnailChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        if (this.state.isPreviewFullScreen) {\r\n            this.closePreviewFullScreen();\r\n        }\r\n        else {\r\n            this.openPreviewFullScreen();\r\n        }\r\n    }\r\n\r\n    onFullScreenChange() {\r\n        this.setState({ isPreviewFullScreen: !this.state.isPreviewFullScreen });\r\n    }\r\n\r\n    openPreviewFullScreen() {\r\n        let elem = ReactDOM.findDOMNode(this.galleria);\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        }\r\n        else if (elem.mozRequestFullScreen) { /* Firefox */\r\n            elem.mozRequestFullScreen();\r\n        }\r\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n            elem.webkitRequestFullscreen();\r\n        }\r\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    closePreviewFullScreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        }\r\n        else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n        else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        document.addEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        document.removeEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        return (\r\n            <div className=\"p-grid p-nogutter p-justify-center\">\r\n                <img src={`${item.thumbnailImageSrc}`} alt={item.alt} style={{ display: 'block' }} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    previewTemplate(item) {\r\n        if (this.state.isPreviewFullScreen) {\r\n            return <img src={`${item.previewImageSrc}`} alt={item.alt} />\r\n        }\r\n\r\n        return <img src={`${item.previewImageSrc}`} alt={item.alt} style={{ width: '100%', display: 'block' }} />\r\n    }\r\n\r\n    renderFooter() {\r\n        let autoPlayClassName = classNames('pi', {\r\n            'pi-play': !this.state.isAutoPlayActive,\r\n            'pi-pause': this.state.isAutoPlayActive\r\n        });\r\n\r\n        let fullScreenClassName = classNames('pi', {\r\n            'pi-window-maximize': !this.state.isPreviewFullScreen,\r\n            'pi-window-minimize': this.state.isPreviewFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"custom-galleria-footer\">\r\n                <Button icon=\"pi pi-list\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\r\n                <Button icon={autoPlayClassName} onClick={() => {\r\n                    if (!this.state.isAutoPlayActive) {\r\n                        this.galleria.startSlideShow();\r\n                        this.setState({ isAutoPlayActive: true });\r\n                    }\r\n                    else {\r\n                        this.galleria.stopSlideShow();\r\n                        this.setState({ isAutoPlayActive: false });\r\n                    }\r\n                }} />\r\n                {\r\n                    this.state.images && (\r\n                        <span>\r\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\r\n                            <span className=\"title\">{this.state.images[this.state.activeIndex].title}</span>\r\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = this.renderFooter();\r\n        const galleriaClassName = classNames('custom-galleria', {\r\n            'preview-fullscreen': this.state.isPreviewFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"galleria-demo\">\r\n                <div className=\"content-section introduction\">\r\n                    <div className=\"feature-intro\">\r\n                        <h1>Photograph Work</h1>\r\n                        <p>Galleria is a content gallery component.</p>\r\n\r\n                        {/* <AppContentContext.Consumer>\r\n                            {context => <button onClick={() => context.onChangelogBtnClick(\"galleria\")} className=\"layout-changelog-button\">{context.changelogText}</button>}\r\n                        </AppContentContext.Consumer> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\r\n                        showThumbnails={this.state.showThumbnails} showPreviewNavButtons={true} showNavButtonsOnPreviewHover={true}\r\n                        numVisible={5} circular={true} autoPlay={true} transitionInterval={3000}\r\n                        previewItemTemplate={this.previewTemplate} thumbnailItemTemplate={this.itemTemplate} footer={footer}\r\n                        style={{ maxWidth: '520px' }} className={galleriaClassName} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Artwork","var base_url = `${process.env.REACT_APP_API_BASE_URL}artwork/`\r\n\r\nconst ValidationService = {\r\n    getBase64Images: function() {\r\n        console.log(base_url,'***88')\r\n        return fetch(`${base_url}getBase64Images`);\r\n    },\r\n\r\n\r\n};\r\n\r\nexport default ValidationService;","import React from 'react';\r\n// import './Documentation.css';\r\n\r\n\r\nclass Documentation extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n                Documentation\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Documentation \r\n","import React from 'react';\r\nimport { Panel } from 'primereact/panel';\r\nimport { Editor } from 'primereact/editor';\r\nimport { getResumeData } from '../../apis/ResumeService';\r\nclass Resume extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            resumeHtmlValue: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        getResumeData().then((data) => {\r\n            data.json().then((json) => {\r\n                this.setState({ resumeHtmlValue: json.data });\r\n            })\r\n        })\r\n        // storeResumeData()\r\n        // onTextChange={(e) => this.resumeTextChange()}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Panel header=\"Resume\">\r\n                        <Editor readonly={true} style={{ height: '1000px' }} value={this.state.resumeHtmlValue} >\r\n                        </Editor>\r\n                    </Panel>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Resume","\r\nimport React from \"react\";\r\nimport Home from './components/Home/Home';\r\nimport { Route, Switch,HashRouter } from \"react-router-dom\";\r\nimport Projects from './components/Projects/Projects';\r\nimport Artwork from './components/Artwork/Artwork';\r\nimport Documentation from './components/Documentation/Documentation';\r\nimport Resume from './components/Resume/Resume';\r\n\r\n// import { NavigationBar } from \"./components/NavigationBar/NavigationBar\";\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                {/* <Route exact path=\"/\" component={EditNotes} /> */}\r\n                {/* <Route exact path=\"/\" component={Home} /> */}\r\n                {/* <Route exact path=\"/Home\" component={Home} /> */}\r\n                <Route exact path=\"/Resume\" component={Resume} />\r\n                <Route  exact path=\"/Projects\" component={Projects} />\r\n                <Route exact path=\"/Artwork\" component={Artwork} />\r\n                <Route exact path=\"/Documentation\" component={Documentation} />\r\n                {/* <Route path=\"*\" component={() => \"404 NOT FOUND\"} /> */}\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n};\r\n","\nimport './App.css';\nimport React from 'react';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/Footer/Footer';\nimport { NavigationBar } from './components/NavigationBar/NavigationBar';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport { Routes } from './routes';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Router history={createBrowserHistory}>\n        <Header />\n        <NavigationBar></NavigationBar>\n          <Routes />\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}